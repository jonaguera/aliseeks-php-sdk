<?php
/**
 * PriceSummary
 *
 * PHP version 5
 *
 * @category Class
 * @package  AliseeksApi
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Aliseeks API
 *
 * AliExpress product searching and product details retrieval API.
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 3.3.4
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace AliseeksApi\Model;

use \ArrayAccess;
use \AliseeksApi\ObjectSerializer;

/**
 * PriceSummary Class Doc Comment
 *
 * @category Class
 * @description A summary of prices for a product
 * @package  AliseeksApi
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class PriceSummary implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'PriceSummary';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'original_amount' => '\AliseeksApi\Model\PriceRange',
        'unit_original_amount' => '\AliseeksApi\Model\PriceRange',
        'discounted_amount' => '\AliseeksApi\Model\PriceRange',
        'unit_discounted_amount' => '\AliseeksApi\Model\PriceRange',
        'bulk_amount' => '\AliseeksApi\Model\PriceRange',
        'unit_bulk_amount' => '\AliseeksApi\Model\PriceRange'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPIFormats = [
        'original_amount' => null,
        'unit_original_amount' => null,
        'discounted_amount' => null,
        'unit_discounted_amount' => null,
        'bulk_amount' => null,
        'unit_bulk_amount' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'original_amount' => 'originalAmount',
        'unit_original_amount' => 'unitOriginalAmount',
        'discounted_amount' => 'discountedAmount',
        'unit_discounted_amount' => 'unitDiscountedAmount',
        'bulk_amount' => 'bulkAmount',
        'unit_bulk_amount' => 'unitBulkAmount'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'original_amount' => 'setOriginalAmount',
        'unit_original_amount' => 'setUnitOriginalAmount',
        'discounted_amount' => 'setDiscountedAmount',
        'unit_discounted_amount' => 'setUnitDiscountedAmount',
        'bulk_amount' => 'setBulkAmount',
        'unit_bulk_amount' => 'setUnitBulkAmount'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'original_amount' => 'getOriginalAmount',
        'unit_original_amount' => 'getUnitOriginalAmount',
        'discounted_amount' => 'getDiscountedAmount',
        'unit_discounted_amount' => 'getUnitDiscountedAmount',
        'bulk_amount' => 'getBulkAmount',
        'unit_bulk_amount' => 'getUnitBulkAmount'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['original_amount'] = isset($data['original_amount']) ? $data['original_amount'] : null;
        $this->container['unit_original_amount'] = isset($data['unit_original_amount']) ? $data['unit_original_amount'] : null;
        $this->container['discounted_amount'] = isset($data['discounted_amount']) ? $data['discounted_amount'] : null;
        $this->container['unit_discounted_amount'] = isset($data['unit_discounted_amount']) ? $data['unit_discounted_amount'] : null;
        $this->container['bulk_amount'] = isset($data['bulk_amount']) ? $data['bulk_amount'] : null;
        $this->container['unit_bulk_amount'] = isset($data['unit_bulk_amount']) ? $data['unit_bulk_amount'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets original_amount
     *
     * @return \AliseeksApi\Model\PriceRange|null
     */
    public function getOriginalAmount()
    {
        return $this->container['original_amount'];
    }

    /**
     * Sets original_amount
     *
     * @param \AliseeksApi\Model\PriceRange|null $original_amount original_amount
     *
     * @return $this
     */
    public function setOriginalAmount($original_amount)
    {
        $this->container['original_amount'] = $original_amount;

        return $this;
    }

    /**
     * Gets unit_original_amount
     *
     * @return \AliseeksApi\Model\PriceRange|null
     */
    public function getUnitOriginalAmount()
    {
        return $this->container['unit_original_amount'];
    }

    /**
     * Sets unit_original_amount
     *
     * @param \AliseeksApi\Model\PriceRange|null $unit_original_amount unit_original_amount
     *
     * @return $this
     */
    public function setUnitOriginalAmount($unit_original_amount)
    {
        $this->container['unit_original_amount'] = $unit_original_amount;

        return $this;
    }

    /**
     * Gets discounted_amount
     *
     * @return \AliseeksApi\Model\PriceRange|null
     */
    public function getDiscountedAmount()
    {
        return $this->container['discounted_amount'];
    }

    /**
     * Sets discounted_amount
     *
     * @param \AliseeksApi\Model\PriceRange|null $discounted_amount discounted_amount
     *
     * @return $this
     */
    public function setDiscountedAmount($discounted_amount)
    {
        $this->container['discounted_amount'] = $discounted_amount;

        return $this;
    }

    /**
     * Gets unit_discounted_amount
     *
     * @return \AliseeksApi\Model\PriceRange|null
     */
    public function getUnitDiscountedAmount()
    {
        return $this->container['unit_discounted_amount'];
    }

    /**
     * Sets unit_discounted_amount
     *
     * @param \AliseeksApi\Model\PriceRange|null $unit_discounted_amount unit_discounted_amount
     *
     * @return $this
     */
    public function setUnitDiscountedAmount($unit_discounted_amount)
    {
        $this->container['unit_discounted_amount'] = $unit_discounted_amount;

        return $this;
    }

    /**
     * Gets bulk_amount
     *
     * @return \AliseeksApi\Model\PriceRange|null
     */
    public function getBulkAmount()
    {
        return $this->container['bulk_amount'];
    }

    /**
     * Sets bulk_amount
     *
     * @param \AliseeksApi\Model\PriceRange|null $bulk_amount bulk_amount
     *
     * @return $this
     */
    public function setBulkAmount($bulk_amount)
    {
        $this->container['bulk_amount'] = $bulk_amount;

        return $this;
    }

    /**
     * Gets unit_bulk_amount
     *
     * @return \AliseeksApi\Model\PriceRange|null
     */
    public function getUnitBulkAmount()
    {
        return $this->container['unit_bulk_amount'];
    }

    /**
     * Sets unit_bulk_amount
     *
     * @param \AliseeksApi\Model\PriceRange|null $unit_bulk_amount unit_bulk_amount
     *
     * @return $this
     */
    public function setUnitBulkAmount($unit_bulk_amount)
    {
        $this->container['unit_bulk_amount'] = $unit_bulk_amount;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }
}


